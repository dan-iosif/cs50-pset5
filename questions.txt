0.  TODO
1.  According to its man page, what does getrusage do?
int getrusage(int who, struct rusage *usage); returns  resource  usage  measures for who
which can be RUSAGE_SELF, usage statistics for the calling process,  which  is  the sum of resources used by all threads in the process.

2.  
3.  Why do you think we pass before and after by reference (instead of by value) to calculate, even though we’re not changing their contents? Using pointers, rather than passing by value, is quicker and more efficient. You are making copies of the structs that live in the frame of calculate. The values of the structs that live in the frame of main are used for calculation. Struct rusage is pretty big in terms of memory. 

4. Explain as precisely as possible, in a paragraph or more, how main goes about reading words from a file. In other words, convince us that you indeed understand how that function’s for loop works.
Main reads character by character from the file. After a letter is read it is stored in the array word and the index is increased. If more than 45 characters have been read without finding a terminator, the word is invalid does not get checked. If a number is found in the word being read, 
the word is discarded without being checked. If the terminator character \0 is read, a valid word has been found. \0 is added to word and the word counter is increased.
5.  Why do you think we used fgetc to read each word’s characters one at a time rather than use fscanf with a format string like "%s" to read whole words at a time? Put another way, what problems might arise by relying on fscanf alone?
With fscanf you read whole words. If the word read was larger than 45 characters we would be writing past the bounds of our word array. SEG FAULT
6.  Why do you think we declared the parameters for check and load as const? Means the variables passed to the functions be read from, not modified. It's an extra step to insure check won't modify word.

7.  TODO
8.  TODO
9.  TODO
10. TODO
